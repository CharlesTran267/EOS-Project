{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\EOS Project\\\\front-end\\\\src\\\\View\\\\ContributePage\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { fileUploadStyle } from './FileUpload.style';\nimport Dropzone from 'react-dropzone';\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\nimport Axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FileUpload(props) {\n  _s();\n\n  const classes = fileUploadStyle();\n  const [Images, setImages] = useState([]);\n\n  const onDrop = files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n\n    for (var i = 0; i < files.length; i++) {\n      formData.append(\"files\", files[i]);\n    } //save the Image we chose inside the Node Server \n\n\n    Axios.post('/upload/uploadImage', formData, config).then(response => {\n      if (response.data.success) {\n        console.log(response.data.image);\n        setImages(Images.concat(response.data.image));\n        props.refreshFunction(Images.concat(response.data.image));\n      } else {\n        console.log(\"failed\");\n        alert('Failed to save the Image in Server');\n      }\n    });\n  };\n\n  const onDelete = image => {\n    const currentIndex = Images.indexOf(image);\n    let newImages = [...Images];\n    newImages.splice(currentIndex, 1);\n    setImages(newImages);\n    props.refreshFunction(newImages);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        className: classes.upload,\n        children: /*#__PURE__*/_jsxDEV(Dropzone, {\n          onDrop: onDrop,\n          multiple: true,\n          maxSize: 99999999999999999999999999999999,\n          children: ({\n            getRootProps,\n            getInputProps\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'block',\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CloudUploadOutlined, {\n              style: {\n                color: \"#6990F2\",\n                fontSize: \"100px\",\n                marginLeft: \"50px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"#6990F2\",\n                fontSize: \"20px\"\n              },\n              children: \"Browse File to Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 7,\n        className: classes.uploadfiles,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            justifyContent: \"flex-start\"\n          },\n          children: [Images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => onDelete(image),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: '50px',\n                height: '50px'\n              },\n              src: `${image}`,\n              alt: `Img-${index}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)), \"\\\\\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileUpload, \"ctGZwJnr/Sg6IjjGKBcfFzkSfBA=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/Users/User/Desktop/EOS Project/front-end/src/View/ContributePage/FileUpload.js"],"names":["React","useState","fileUploadStyle","Dropzone","CloudUploadOutlined","Axios","Grid","FileUpload","props","classes","Images","setImages","onDrop","files","formData","FormData","config","header","i","length","append","post","then","response","data","success","console","log","image","concat","refreshFunction","alert","onDelete","currentIndex","indexOf","newImages","splice","upload","getRootProps","getInputProps","display","alignItems","justifyContent","color","fontSize","marginLeft","uploadfiles","map","index","width","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { fileUploadStyle } from './FileUpload.style';\nimport Dropzone from 'react-dropzone';\nimport {CloudUploadOutlined} from \"@ant-design/icons\"\nimport Axios from 'axios';\nimport { Grid } from '@material-ui/core';\nfunction FileUpload(props) {\n    const classes = fileUploadStyle();\n    const [Images, setImages] = useState([])\n\n    const onDrop = (files) => {\n        let formData = new FormData();\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        }\n        for(var i=0;i<files.length;i++){\n            formData.append(\"files\",files[i])\n        }\n        //save the Image we chose inside the Node Server \n        Axios.post('/upload/uploadImage', formData, config)\n            .then(response => {\n                if (response.data.success) {\n                    console.log(response.data.image)\n                    setImages(Images.concat(response.data.image))\n                    props.refreshFunction(Images.concat(response.data.image))\n                } else {\n                    console.log(\"failed\")\n                    alert('Failed to save the Image in Server')\n                }\n            })\n    }\n\n\n    const onDelete = (image) => {\n        const currentIndex = Images.indexOf(image);\n        \n        let newImages = [...Images]\n        newImages.splice(currentIndex, 1)\n\n        setImages(newImages)\n        props.refreshFunction(newImages)\n    }\n\n    return (\n        <div>\n            <Grid container justifyContent=\"space-between\">\n                <Grid item xs={3} className={classes.upload}>\n                    <Dropzone\n                        onDrop={onDrop}\n                        multiple={true}\n                        maxSize={99999999999999999999999999999999}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div style={{\n                                display: 'block', alignItems: 'center', justifyContent: 'center'\n                            }}\n                                {...getRootProps()}\n                            >\n                                <input {...getInputProps()} />\n                                <CloudUploadOutlined style={{color: \"#6990F2\",fontSize:\"100px\",marginLeft:\"50px\"}}/>\n                                <p style={{color: \"#6990F2\",fontSize:\"20px\"}}>Browse File to Upload</p>\n                            </div>\n                        )}\n                    </Dropzone>\n                </Grid>\n                <Grid item xs={7} className={classes.uploadfiles}>\n                    <div style={{justifyContent:\"flex-start\"}}>\n                        {Images.map((image, index) => (\n                            <div onClick={() => onDelete(image)}>\n                                <img style={{ width: '50px', height: '50px' }} src={`${image}`} alt={`Img-${index}`} />\n                            </div>\n                        ))}\\\n                    </div>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default FileUpload"]},"metadata":{},"sourceType":"module"}