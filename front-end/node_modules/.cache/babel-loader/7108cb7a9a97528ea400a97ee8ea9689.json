{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\EOS Project\\\\front-end\\\\src\\\\app\\\\VolcanoDetailPage\\\\VolcanoeTimeLine.js\",\n    _s = $RefreshSig$();\n\nimport { Legend, Title } from 'chart.js';\nimport React from 'react';\nimport { Chart, Line } from 'react-chartjs-2';\nimport './DetailPage.css';\nimport { useState } from 'react';\nimport TimeLine from './TimeLine';\nimport AFEtimeGraph from './AFEtimeLine';\nimport OverviewTimeLine from './OverviewTimeLine';\nimport MenuDropDown from './MenuDropDown';\nimport { useHistory } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AFEData = [];\n\nfor (let i = 0; i < 15; i++) {\n  AFEData.push({\n    x: Math.floor(Math.random() * (2020 - 1550) + 1550),\n    y: 5\n  });\n}\n\nconst VolcanoTimeLine = () => {\n  _s();\n\n  const [volcanoes, setVolcanoes] = useState([]);\n  useEffect(() => {\n    axios.get(`/volcanoes/getVolcanoes`).then(response => {\n      if (response.data.success) {\n        setVolcanoes(response.data.volcanoes);\n      } else {\n        alert(\"Failed to fetch data\");\n      }\n    });\n  }, []);\n  const TaalEruptionYear = [2020, 1977, 1976, 1970, 1969, 1968, 1967, 1966, 1965, 1911, 1904, 1903, 1885, 1878, 1874, 1873, 1842, 1825, 1808, 1790, 1754, 1749, 1731, 1729, 1716, 1715, 1709, 1707, 1645, 1641, 1635, 1634, 1609, 1591, 1572];\n  const TaalData = [];\n  let check = 0;\n  let EndYearData = [];\n\n  if (check === 0) {\n    for (let i = 0; i < TaalEruptionYear.length; i++) {\n      let p = {\n        x: TaalEruptionYear[i] + 1,\n        y: 10\n      };\n      TaalData.push(p);\n    }\n\n    for (let i = 0; i < TaalEruptionYear.length; i++) {\n      let p = {\n        x: TaalEruptionYear[i],\n        y: 10\n      };\n      TaalData.push(p);\n    }\n\n    check = 1;\n  }\n\n  const [taalData, setTaalData] = useState(TaalData);\n\n  const PassTaalData = () => {\n    return taalData;\n  };\n\n  const PassEndYear = () => {\n    return EndYearData;\n  };\n\n  const [list, setList] = useState(['9', '10']);\n  const [gData, setgData] = useState([]);\n\n  const onGetData = (yD, yU) => {\n    let list = [];\n\n    for (let i = Math.floor(yD); i <= Math.floor(yU); i++) {\n      list.push(i);\n    }\n\n    setList([...list]);\n  };\n\n  const onUp = (begin, end, yD, yU) => {\n    var l = [];\n    let g = end - begin;\n    let YU = Math.floor(yU);\n    let YD = Math.floor(yD);\n\n    if (YU > YD) {\n      for (let i = YD; i < YU; i++) {\n        for (let j = begin; j <= 12; j++) {\n          if (j === 1) {\n            l.push(YD);\n            continue;\n          } else {\n            l.push(j);\n          }\n        }\n\n        begin = 1;\n        YD += 1;\n      }\n\n      for (let i = begin; i <= end; i++) {\n        if (i === 1) {\n          l.push(YD);\n          continue;\n        }\n\n        l.push(i);\n      }\n    } else {\n      for (let i = begin; i <= end; i++) {\n        l.push(i);\n      }\n    }\n\n    setList([...l]);\n  };\n\n  const AddLable = () => {\n    return list;\n  };\n\n  const AddGraphData = () => {\n    console.log(gData);\n    return gData;\n  };\n\n  const getDummyData = () => {\n    return AFEData;\n  };\n\n  const redirectPage = () => {};\n\n  let OverviewTL = /*#__PURE__*/_jsxDEV(OverviewTimeLine, {\n    onPassData: onGetData,\n    onGetTaalData: PassTaalData,\n    onGetTaalEruptionEndYear: PassEndYear,\n    onGetDummyAFEData: getDummyData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 20\n  }, this);\n\n  let DecadeTL = /*#__PURE__*/_jsxDEV(TimeLine, {\n    onPassData: onUp,\n    onGetTaalData: PassTaalData,\n    onGetDummyAFEData: getDummyData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 18\n  }, this);\n\n  const [EruptionOption, setEruptionOption] = useState(OverviewTL);\n\n  const ChangeGraph = choice => {\n    if (choice === 'overview') {\n      setEruptionOption( /*#__PURE__*/_jsxDEV(OverviewTimeLine, {\n        onPassData: onGetData,\n        onGetTaalData: PassTaalData,\n        onGetTaalEruptionEndYear: PassEndYear,\n        onGetDummyAFEData: getDummyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 23\n      }, this));\n    } else if (choice === 'decade') {\n      setEruptionOption( /*#__PURE__*/_jsxDEV(TimeLine, {\n        onPassData: onUp,\n        onGetTaalData: PassTaalData,\n        onGetTaalEruptionEndYear: PassEndYear,\n        onGetDummyAFEData: getDummyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 23\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Row1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoDisplay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Name: Taal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ID Number: 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Latest Eruption: 2020\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"giantImage\",\n        children: volcanoes[1] && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/${volcanoes[1].imgURL}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MenuDropDown, {\n          onChangeGraph: ChangeGraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }, this), EruptionOption]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AFEtimeGraph, {\n        ll: AddLable,\n        dt: AddGraphData,\n        onGetTaalData: PassTaalData,\n        onGetTaalEruptionEndYear: PassEndYear,\n        onGetAFEData: getDummyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 7\n  }, this);\n};\n\n_s(VolcanoTimeLine, \"uXhQWuuCU8r0T6XdY5O5RDqEay4=\");\n\n_c = VolcanoTimeLine;\nexport default VolcanoTimeLine;\n\nvar _c;\n\n$RefreshReg$(_c, \"VolcanoTimeLine\");","map":{"version":3,"sources":["C:/Users/User/Desktop/EOS Project/front-end/src/app/VolcanoDetailPage/VolcanoeTimeLine.js"],"names":["Legend","Title","React","Chart","Line","useState","TimeLine","AFEtimeGraph","OverviewTimeLine","MenuDropDown","useHistory","useEffect","axios","AFEData","i","push","x","Math","floor","random","y","VolcanoTimeLine","volcanoes","setVolcanoes","get","then","response","data","success","alert","TaalEruptionYear","TaalData","check","EndYearData","length","p","taalData","setTaalData","PassTaalData","PassEndYear","list","setList","gData","setgData","onGetData","yD","yU","onUp","begin","end","l","g","YU","YD","j","AddLable","AddGraphData","console","log","getDummyData","redirectPage","OverviewTL","DecadeTL","EruptionOption","setEruptionOption","ChangeGraph","choice","imgURL"],"mappings":"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","sourcesContent":["import { Legend, Title } from 'chart.js';\nimport React from 'react';\nimport {Chart, Line} from 'react-chartjs-2';\nimport './DetailPage.css';\nimport { useState } from 'react';\nimport TimeLine from './TimeLine';\nimport AFEtimeGraph from './AFEtimeLine';\nimport OverviewTimeLine from './OverviewTimeLine';\nimport MenuDropDown from './MenuDropDown';\nimport { useHistory } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport axios from 'axios';\n\nconst AFEData = [];\n\n  for(let i = 0;i<15;i++){\n    AFEData.push({x : Math.floor(Math.random() * (2020 - 1550) + 1550),\n      y: 5});\n  }\n\n\nconst VolcanoTimeLine = () => {\n\n  const [volcanoes, setVolcanoes] = useState([]);\n    \n    useEffect(()=>{\n        \n        axios.get(`/volcanoes/getVolcanoes`)\n\n         .then(response => {\n           if(response.data.success){\n             setVolcanoes(response.data.volcanoes)\n           } else{\n             alert(\"Failed to fetch data\")\n           }\n         })\n   \n     },[])\n\n\nconst TaalEruptionYear = [2020, 1977, 1976, 1970, 1969, 1968, 1967, 1966, 1965, 1911, 1904, 1903, 1885, 1878, 1874, 1873, 1842, 1825, 1808, 1790, 1754, 1749, 1731, 1729, 1716, 1715, 1709, 1707, 1645, 1641, 1635, 1634, 1609, 1591, 1572];\nconst TaalData = [];\n\n\nlet check = 0;\n\n\nlet EndYearData =[];\n\n\nif(check === 0){\n\nfor(let i=0;i<TaalEruptionYear.length;i++){\n  let p = {\n    x: TaalEruptionYear[i]+1,\n    y: 10\n  }\n  TaalData.push(p);\n}\n\n\nfor(let i=0;i<TaalEruptionYear.length;i++){\n  let p = {\n    x: TaalEruptionYear[i],\n    y: 10\n  }\n  TaalData.push(p);\n}\n\ncheck = 1;\n}\n\nconst [taalData,setTaalData] = useState(TaalData);\n\nconst PassTaalData = () =>{\n  return taalData;\n}\n\nconst PassEndYear = () => {\n  return EndYearData;\n}\n\nconst [list,setList] = useState(['9','10']);\nconst [gData,setgData] = useState([]);\n\n\n  const onGetData = (yD,yU) =>{\n    let list = [];\n    for(let i = Math.floor(yD);i<=Math.floor(yU);i++){\n      list.push(i);\n    }\n\n    setList([...list]);\n  }\n\n\n  const onUp = (begin,end,yD,yU) => {\n    var l = [];\n    let g = end - begin;\n\n    let YU = Math.floor(yU);\n    let YD = Math.floor(yD);\n\n    if(YU > YD){\n      for(let i = YD;i<YU;i++){\n        for(let j = begin;j<=12;j++){\n          if(j === 1){\n            l.push(YD);\n            continue;\n          }\n          else{\n          l.push(j);\n          }\n        }\n        begin = 1;\n        YD+=1;\n      }\n\n      for(let i = begin;i <= end;i++){\n        if(i === 1){\n          l.push(YD);\n          continue;\n        }\n        l.push(i);\n      }\n\n    }\n    else{\n      \n        for(let i = begin;i<=end;i++){\n            l.push(i);\n        }\n    }\n    \n    \n    setList([...l]);\n  }\n\n\n\n  const AddLable = () => {\n    \n    return list;\n  }\n\n  const AddGraphData = () => {\n    console.log(gData);\n    return gData;\n  }\n\n\nconst getDummyData = () =>{\n    return AFEData;\n  }\n\nconst redirectPage = () =>{\n  \n}\n\n  let OverviewTL = <OverviewTimeLine \n    onPassData = {onGetData}\n    onGetTaalData = {PassTaalData}\n    onGetTaalEruptionEndYear = {PassEndYear}\n    onGetDummyAFEData = {getDummyData}\n  />;\n\n  let DecadeTL = <TimeLine \n  onPassData = {onUp}\n  onGetTaalData = {PassTaalData}\n  onGetDummyAFEData = {getDummyData}\n/>;\n\n  const [EruptionOption,setEruptionOption] = useState(OverviewTL);\n  \nconst ChangeGraph = (choice) => {\n  if(choice === 'overview'){\n    setEruptionOption(<OverviewTimeLine \n      onPassData = {onGetData}\n      onGetTaalData = {PassTaalData}\n      onGetTaalEruptionEndYear = {PassEndYear}\n      onGetDummyAFEData = {getDummyData}\n    />);\n  }\n  else if(choice === 'decade'){\n    setEruptionOption(<TimeLine \n      onPassData = {onUp}\n      onGetTaalData = {PassTaalData}\n      onGetTaalEruptionEndYear = {PassEndYear}\n      onGetDummyAFEData = {getDummyData}\n    />);\n  }\n}\n  \n\n    return (\n      <div>\n            <div className=\"Row1\">\n                <div className = \"infoDisplay\"> \n                    <h1>Name: Taal</h1>\n                    <h1>ID Number: 2</h1>\n                    <h1>Latest Eruption: 2020</h1>\n                </div>\n                <div className = \"giantImage\">\n                { volcanoes[1] && ( <img src= {`/${volcanoes[1].imgURL}`} />)}\n                </div>\n            </div>\n            <div>\n              <div>\n                <MenuDropDown onChangeGraph = {ChangeGraph} />\n              </div>\n                {EruptionOption}\n            </div>\n            <div >\n            <AFEtimeGraph \n  ll = {AddLable}\n  dt = {AddGraphData}\n  onGetTaalData = {PassTaalData}\n  onGetTaalEruptionEndYear = {PassEndYear}\n  onGetAFEData = {getDummyData}\n  />\n            </div>\n        </div>\n    );\n}\n\nexport default VolcanoTimeLine;\n"]},"metadata":{},"sourceType":"module"}