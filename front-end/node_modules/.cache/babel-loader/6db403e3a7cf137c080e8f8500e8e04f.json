{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\EOS Project\\\\front-end\\\\src\\\\View\\\\ContributePage\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"FileUpload.css\";\nimport Dropzone from 'react-dropzone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FileAddOutlined } from \"@ant-design/icons\";\nimport Axios from 'axios';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport SwiperCore, { Keyboard, Scrollbar, Pagination, Navigation } from 'swiper/core';\nimport 'swiper/swiper-bundle.min.css';\nimport 'swiper/swiper.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '100%'\n  },\n  swiperContainer: {\n    paddingBottom: '3rem',\n    '& .swiper-pagination-bullet': {\n      background: 'blue'\n    },\n    '& .swiper-button-next:after': {\n      fontSize: '2rem !important'\n    },\n    '& .swiper-button-prev:after': {\n      fontSize: '2rem !important'\n    }\n  }\n});\n\nfunction FileUpload(props) {\n  _s();\n\n  const {\n    media,\n    swiperContainer\n  } = useStyles();\n  const [Images, setImages] = useState([]);\n\n  const onDrop = files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n\n    for (var i = 0; i < files.length; i++) {\n      formData.append(\"files\", files[i]);\n    } //save the Image we chose inside the Node Server \n\n\n    Axios.post('/upload/uploadImage', formData, config).then(response => {\n      if (response.data.success) {\n        console.log(response.data.image);\n        setImages(Images.concat(response.data.image));\n        props.refreshFunction(Images.concat(response.data.image));\n      } else {\n        console.log(\"failed\");\n        alert('Failed to save the Image in Server');\n      }\n    });\n  };\n\n  const onDelete = image => {\n    const currentIndex = Images.indexOf(image);\n    let newImages = [...Images];\n    newImages.splice(currentIndex, 1);\n    setImages(newImages);\n    props.refreshFunction(newImages);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n    //     <Dropzone\n    //         onDrop={onDrop}\n    //         multiple={true}\n    //         maxSize={99999999999999999999999999999999}\n    //     >\n    //         {({ getRootProps, getInputProps }) => (\n    //             <div style={{\n    //                 width: '300px', height: '240px', border: '1px solid lightgray',\n    //                 display: 'flex', alignItems: 'center', justifyContent: 'center'\n    //             }}\n    //                 {...getRootProps()}\n    //             >\n    //                 <input {...getInputProps()} />\n    //                 <FileAddOutlined style={{fontSize:\"100px\"}} />\n    //             </div>\n    //         )}\n    //     </Dropzone>\n    //     <Swiper\n    // \t\tgrabCursor\n    // \t\tkeyboard={{ enabled: true }}\n    // \t\tpagination={{ clickable: true }}\n    // \t\tnavigation\n    // \t\tloop\n    // \t\tclassName={swiperContainer}\n    // \t>\n    // \t\t{Images.map((image, index) => (\n    // \t\t\t<SwiperSlide key={index}>\n    // \t\t\t\t<CardMedia className={media} image={image}/>\n    // \t\t\t</SwiperSlide>\n    // \t\t))}\n    // \t</Swiper>\n    // </div>\n    _jsxDEV(\"div\", {\n      class: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"file-input\",\n          type: \"file\",\n          name: \"file\",\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-cloud-upload-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Browse File to Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        class: \"progress-area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        class: \"uploaded-area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(FileUpload, \"b+3UGXeN76rycHHotGXsHxuXTVg=\", false, function () {\n  return [useStyles];\n});\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/Users/User/Desktop/EOS Project/front-end/src/View/ContributePage/FileUpload.js"],"names":["React","useState","Dropzone","makeStyles","FileAddOutlined","Axios","Swiper","SwiperSlide","CardMedia","SwiperCore","Keyboard","Scrollbar","Pagination","Navigation","useStyles","media","height","paddingTop","swiperContainer","paddingBottom","background","fontSize","FileUpload","props","Images","setImages","onDrop","files","formData","FormData","config","header","i","length","append","post","then","response","data","success","console","log","image","concat","refreshFunction","alert","onDelete","currentIndex","indexOf","newImages","splice"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport \"FileUpload.css\"\nimport Dropzone from 'react-dropzone';\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {FileAddOutlined} from \"@ant-design/icons\"\nimport Axios from 'axios';\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport SwiperCore, {\n\tKeyboard,\n\tScrollbar,\n\tPagination,\n\tNavigation,\n} from 'swiper/core'\nimport 'swiper/swiper-bundle.min.css'\nimport 'swiper/swiper.min.css'\n\nconst useStyles = makeStyles({\n\tmedia: {\n\t\theight: 0,\n\t\tpaddingTop: '100%',\n\t},\n\tswiperContainer: {\n\t\tpaddingBottom: '3rem',\n\t\t'& .swiper-pagination-bullet': {\n\t\t\tbackground: 'blue',\n\t\t},\n\t\t'& .swiper-button-next:after': {\n\t\t\tfontSize: '2rem !important',\n\t\t},\n\t\t'& .swiper-button-prev:after': {\n\t\t\tfontSize: '2rem !important',\n\t\t},\n\t},\n})\nfunction FileUpload(props) {\n    const { media, swiperContainer } = useStyles()\n    const [Images, setImages] = useState([])\n\n    const onDrop = (files) => {\n        let formData = new FormData();\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        }\n        for(var i=0;i<files.length;i++){\n            formData.append(\"files\",files[i])\n        }\n        //save the Image we chose inside the Node Server \n        Axios.post('/upload/uploadImage', formData, config)\n            .then(response => {\n                if (response.data.success) {\n                    console.log(response.data.image)\n                    setImages(Images.concat(response.data.image))\n                    props.refreshFunction(Images.concat(response.data.image))\n                } else {\n                    console.log(\"failed\")\n                    alert('Failed to save the Image in Server')\n                }\n            })\n    }\n\n\n    const onDelete = (image) => {\n        const currentIndex = Images.indexOf(image);\n        \n        let newImages = [...Images]\n        newImages.splice(currentIndex, 1)\n\n        setImages(newImages)\n        props.refreshFunction(newImages)\n    }\n\n    return (\n        // <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        //     <Dropzone\n        //         onDrop={onDrop}\n        //         multiple={true}\n        //         maxSize={99999999999999999999999999999999}\n        //     >\n        //         {({ getRootProps, getInputProps }) => (\n        //             <div style={{\n        //                 width: '300px', height: '240px', border: '1px solid lightgray',\n        //                 display: 'flex', alignItems: 'center', justifyContent: 'center'\n        //             }}\n        //                 {...getRootProps()}\n        //             >\n        //                 <input {...getInputProps()} />\n        //                 <FileAddOutlined style={{fontSize:\"100px\"}} />\n\n        //             </div>\n        //         )}\n        //     </Dropzone>\n\n        //     <Swiper\n\t\t// \t\tgrabCursor\n\t\t// \t\tkeyboard={{ enabled: true }}\n\t\t// \t\tpagination={{ clickable: true }}\n\t\t// \t\tnavigation\n\t\t// \t\tloop\n\t\t// \t\tclassName={swiperContainer}\n\t\t// \t>\n\t\t// \t\t{Images.map((image, index) => (\n\t\t// \t\t\t<SwiperSlide key={index}>\n\t\t// \t\t\t\t<CardMedia className={media} image={image}/>\n\t\t// \t\t\t</SwiperSlide>\n\t\t// \t\t))}\n\t\t// \t</Swiper>\n\n\n        // </div>\n        <div class=\"wrapper\">\n            <form action=\"#\">\n                <input class=\"file-input\" type=\"file\" name=\"file\" hidden/>\n                <i class=\"fas fa-cloud-upload-alt\"></i>\n                <p>Browse File to Upload</p>\n            </form>\n            <section class=\"progress-area\"></section>\n            <section class=\"uploaded-area\"></section>\n        </div>\n    )\n}\n\nexport default FileUpload"]},"metadata":{},"sourceType":"module"}