{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\EOS Project\\\\front-end\\\\src\\\\View\\\\ContributePage\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { FileAddOutlined } from \"@ant-design/icons\";\nimport Axios from 'axios';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport SwiperCore, { Keyboard, Scrollbar, Pagination, Navigation } from 'swiper/core';\nimport 'swiper/swiper-bundle.min.css';\nimport 'swiper/swiper.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '100%'\n  },\n  swiperContainer: {\n    paddingBottom: '3rem',\n    '& .swiper-pagination-bullet': {\n      background: 'blue'\n    },\n    '& .swiper-button-next:after': {\n      fontSize: '2rem !important'\n    },\n    '& .swiper-button-prev:after': {\n      fontSize: '2rem !important'\n    }\n  }\n});\n\nfunction FileUpload(props) {\n  _s();\n\n  const {\n    media,\n    swiperContainer\n  } = useStyles();\n  const [Images, setImages] = useState([]);\n\n  const onDrop = files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n\n    for (var i = 0; i < files.length; i++) {\n      formData.append(\"files\", files[i]);\n    } //save the Image we chose inside the Node Server \n\n\n    Axios.post('/upload/uploadImage', formData, config).then(response => {\n      if (response.data.success) {\n        console.log(response.data.image);\n        setImages(Images.concat(response.data.image));\n        props.refreshFunction(Images.concat(response.data.image));\n      } else {\n        console.log(\"failed\");\n        alert('Failed to save the Image in Server');\n      }\n    });\n  };\n\n  const onDelete = image => {\n    const currentIndex = Images.indexOf(image);\n    let newImages = [...Images];\n    newImages.splice(currentIndex, 1);\n    setImages(newImages);\n    props.refreshFunction(newImages);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: onDrop,\n      multiple: true,\n      maxSize: 99999999999999999999999999999999,\n      children: ({\n        getRootProps,\n        getInputProps\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '300px',\n          height: '240px',\n          border: '1px solid lightgray',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        ...getRootProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FileAddOutlined, {\n          style: {\n            fontSize: \"100px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        width: '350px',\n        height: '240px',\n        overflowX: 'scroll'\n      },\n      children: /*#__PURE__*/_jsxDEV(Swiper, {\n        grabCursor: true,\n        keyboard: {\n          enabled: true\n        },\n        pagination: {\n          clickable: true\n        },\n        navigation: true,\n        loop: true,\n        className: swiperContainer,\n        children: Images.map((image, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(CardMedia, {\n            className: media,\n            image: () => onDelete(image)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 7\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileUpload, \"b+3UGXeN76rycHHotGXsHxuXTVg=\", false, function () {\n  return [useStyles];\n});\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/Users/User/Desktop/EOS Project/front-end/src/View/ContributePage/FileUpload.js"],"names":["React","useState","Dropzone","FileAddOutlined","Axios","Swiper","SwiperSlide","CardMedia","SwiperCore","Keyboard","Scrollbar","Pagination","Navigation","useStyles","makeStyles","media","height","paddingTop","swiperContainer","paddingBottom","background","fontSize","FileUpload","props","Images","setImages","onDrop","files","formData","FormData","config","header","i","length","append","post","then","response","data","success","console","log","image","concat","refreshFunction","alert","onDelete","currentIndex","indexOf","newImages","splice","display","justifyContent","getRootProps","getInputProps","width","border","alignItems","overflowX","enabled","clickable","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Dropzone from 'react-dropzone';\nimport {FileAddOutlined} from \"@ant-design/icons\"\nimport Axios from 'axios';\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport SwiperCore, {\n\tKeyboard,\n\tScrollbar,\n\tPagination,\n\tNavigation,\n} from 'swiper/core'\nimport 'swiper/swiper-bundle.min.css'\nimport 'swiper/swiper.min.css'\n\nconst useStyles = makeStyles({\n\tmedia: {\n\t\theight: 0,\n\t\tpaddingTop: '100%',\n\t},\n\tswiperContainer: {\n\t\tpaddingBottom: '3rem',\n\t\t'& .swiper-pagination-bullet': {\n\t\t\tbackground: 'blue',\n\t\t},\n\t\t'& .swiper-button-next:after': {\n\t\t\tfontSize: '2rem !important',\n\t\t},\n\t\t'& .swiper-button-prev:after': {\n\t\t\tfontSize: '2rem !important',\n\t\t},\n\t},\n})\nfunction FileUpload(props) {\n    const { media, swiperContainer } = useStyles()\n    const [Images, setImages] = useState([])\n\n    const onDrop = (files) => {\n        let formData = new FormData();\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        }\n        for(var i=0;i<files.length;i++){\n            formData.append(\"files\",files[i])\n        }\n        //save the Image we chose inside the Node Server \n        Axios.post('/upload/uploadImage', formData, config)\n            .then(response => {\n                if (response.data.success) {\n                    console.log(response.data.image)\n                    setImages(Images.concat(response.data.image))\n                    props.refreshFunction(Images.concat(response.data.image))\n                } else {\n                    console.log(\"failed\")\n                    alert('Failed to save the Image in Server')\n                }\n            })\n    }\n\n\n    const onDelete = (image) => {\n        const currentIndex = Images.indexOf(image);\n        \n        let newImages = [...Images]\n        newImages.splice(currentIndex, 1)\n\n        setImages(newImages)\n        props.refreshFunction(newImages)\n    }\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Dropzone\n                onDrop={onDrop}\n                multiple={true}\n                maxSize={99999999999999999999999999999999}\n            >\n                {({ getRootProps, getInputProps }) => (\n                    <div style={{\n                        width: '300px', height: '240px', border: '1px solid lightgray',\n                        display: 'flex', alignItems: 'center', justifyContent: 'center'\n                    }}\n                        {...getRootProps()}\n                    >\n                        <input {...getInputProps()} />\n                        <FileAddOutlined style={{fontSize:\"100px\"}} />\n\n                    </div>\n                )}\n            </Dropzone>\n\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\n\n            <Swiper\n\t\t\t\tgrabCursor\n\t\t\t\tkeyboard={{ enabled: true }}\n\t\t\t\tpagination={{ clickable: true }}\n\t\t\t\tnavigation\n\t\t\t\tloop\n\t\t\t\tclassName={swiperContainer}\n\t\t\t>\n\t\t\t\t{Images.map((image, index) => (\n\t\t\t\t\t<SwiperSlide key={index}>\n\t\t\t\t\t\t<CardMedia className={media} image={()=>onDelete(image)} />\n\t\t\t\t\t</SwiperSlide>\n\t\t\t\t))}\n\t\t\t</Swiper>\n\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default FileUpload"]},"metadata":{},"sourceType":"module"}