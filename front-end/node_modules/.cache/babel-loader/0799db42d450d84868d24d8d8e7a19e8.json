{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\EOS Project\\\\front-end\\\\src\\\\app\\\\Par_Gral_DetailPage\\\\Par_img_list.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './DisplayPage.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport VolcanoCard from '../search/volcanoCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ParList = props => {\n  _s();\n\n  const [volcanoes, setVolcanoes] = useState([]);\n  const [particles, setParticles] = useState([]);\n  const [fetchedData, setFetchedData] = useState({});\n  const [generals, setGenerals] = useState([]);\n  useEffect(() => {\n    axios.get(`/volcanoes/getVolcanoes`).then(response => {\n      if (response.data.success) {\n        setVolcanoes(response.data.volcanoes);\n      } else {\n        alert(\"Failed to fetch data\");\n      }\n    });\n    axios.get(\"/volcanoes/getParticles\").then(response => {\n      if (response.data.success) {\n        setParticles(response.data.particles);\n      } else {\n        alert(\"Failed to fetch data\");\n      }\n    });\n    axios.get(\"/volcanoes/getGenerals\").then(res => {\n      if (res.data.success) {\n        setGenerals(res.data.generals);\n      } else {\n        alert(\"Failed to fetch data\");\n      }\n    });\n  }, []);\n  useEffect(() => {\n    setFetchedData({\n      Particles: particles,\n      Generals: generals\n    });\n  }, [particles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"myList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Particle Imgage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), fetchedData && Object.keys(fetchedData).map(key => key == \"Generals\" ? fetchedData[key].length != 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"imageList\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"General Imgage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\"\n        },\n        children: fetchedData[key].map(e => e.volc_id == 2 ? /*#__PURE__*/_jsxDEV(VolcanoCard, {\n          info: e,\n          type: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this) : null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\"\n        },\n        children: fetchedData[key].map(ele => ele.volc_id == 2 ? /*#__PURE__*/_jsxDEV(VolcanoCard, {\n          info: ele,\n          type: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ParList, \"yGBaKnAJhP9YgqRcSGr4HYEf4QE=\");\n\n_c = ParList;\nexport default ParList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParList\");","map":{"version":3,"sources":["C:/Users/User/Desktop/EOS Project/front-end/src/app/Par_Gral_DetailPage/Par_img_list.js"],"names":["React","useState","useEffect","axios","VolcanoCard","ParList","props","volcanoes","setVolcanoes","particles","setParticles","fetchedData","setFetchedData","generals","setGenerals","get","then","response","data","success","alert","res","Particles","Generals","Object","keys","map","key","length","display","flexDirection","flexWrap","e","volc_id","ele"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './DisplayPage.css'\nimport {useState} from 'react'\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport VolcanoCard from '../search/volcanoCard';\n\t\n\nconst ParList = (props) =>{\n\t\n    const [volcanoes, setVolcanoes] = useState([]);\n    const [particles, setParticles] = useState([]);\n    const [fetchedData, setFetchedData] = useState({})\n    const [generals, setGenerals] = useState([]);\n\n    useEffect(()=>{\n        \n        axios.get(`/volcanoes/getVolcanoes`)\n         .then(response => {\n           if(response.data.success){\n             setVolcanoes(response.data.volcanoes)\n           } else{\n             alert(\"Failed to fetch data\")\n           }\n         })\n        axios.get(\"/volcanoes/getParticles\")\n       .then(response => {\n         if(response.data.success){\n           setParticles(response.data.particles)\n         } else{\n           alert(\"Failed to fetch data\")\n         }\n       })\n\n       axios.get(\"/volcanoes/getGenerals\")\n       .then(res => {\n        if(res.data.success){\n            setGenerals(res.data.generals)\n          } else{\n            alert(\"Failed to fetch data\")\n          }\n       })\n   \n     },[])\n\n\n     useEffect(()=>{\n        setFetchedData({\n          Particles: particles,\n          Generals: generals\n        })\n      },[particles])\n\n\n\treturn(\n\t\t<div class = 'myList' >\n\t\t\t<h1>Particle Imgage</h1>\n\t\t\t{(fetchedData && Object.keys(fetchedData).map((key)=>\n          key==\"Generals\"?(fetchedData[key].length !=0?(\n            <div>\n            \n            <div class = 'imageList' >\n\t\t\t    <h1>General Imgage</h1>\n\t\t    </div>\n\n\t\t    <div style={{display: \"flex\",flexDirection:\"row\",flexWrap:\"wrap\"}}>\n            {fetchedData[key].map((e) =>\n\t    e.volc_id==2?\n\t     <VolcanoCard\n              info={e}\n              type={key}\n            />:null\n\t    )}\n            </div>\n\n            </div>):null):(\n            <div>\n            <div style={{display: \"flex\",flexDirection:\"row\",flexWrap:\"wrap\"}}>\n            {fetchedData[key].map((ele)=>\n            ele.volc_id==2?\n            <VolcanoCard\n              info={ele}\n              type={key}\n            />:null)}\n            </div></div>)\n          \n      ))}\n\t\t</div>\n\t);\n}\n\nexport default ParList;\n\n\n"]},"metadata":{},"sourceType":"module"}