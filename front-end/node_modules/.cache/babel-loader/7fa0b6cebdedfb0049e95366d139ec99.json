{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\EOS Project\\\\front-end\\\\src\\\\View\\\\ContributePage\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fileUploadStyle } from './FileUpload.style';\nimport Dropzone from 'react-dropzone';\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\nimport Axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport SingleFileUpload from './SingleFileUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FileUpload(props) {\n  _s();\n\n  const classes = fileUploadStyle();\n  const [Images, setImages] = useState([]);\n\n  const onDrop = files => {\n    setImages(Images.concat(files));\n    props.refreshFunction(Images.concat(files));\n  };\n\n  const onDelete = image => {\n    const currentIndex = Images.indexOf(image);\n    let newImages = [...Images];\n    newImages.splice(currentIndex, 1);\n    setImages(newImages);\n    props.refreshFunction(newImages);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      xs: 4,\n      className: classes.upload,\n      children: /*#__PURE__*/_jsxDEV(Dropzone, {\n        onDrop: onDrop,\n        multiple: true,\n        maxSize: 99999999999999999999999999999999,\n        children: ({\n          getRootProps,\n          getInputProps\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'block',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          ...getRootProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CloudUploadOutlined, {\n            style: {\n              color: \"#6990F2\",\n              fontSize: \"100px\",\n              marginLeft: \"130px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"#6990F2\",\n              fontSize: \"20px\"\n            },\n            children: \"Browse or Drag and Drop files to Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 9\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 9,\n      children: Images.map(image => {\n        /*#__PURE__*/\n        _jsxDEV(SingleFileUpload, {\n          file: image,\n          onDelete: onDelete,\n          setImages: setImages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileUpload, \"ctGZwJnr/Sg6IjjGKBcfFzkSfBA=\");\n\n_c = FileUpload;\nexport default FileUpload;\n{\n  /* <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\n      {Images.map((image, index) => (\n         <div onClick={() => onDelete(image)}>\n     <img style={{ minWidth: '300px', width: '300px', height: '240px' }} src={`${image}`} alt={`Img-${index}`} />}*/\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/Users/User/Desktop/EOS Project/front-end/src/View/ContributePage/FileUpload.js"],"names":["React","useEffect","useState","fileUploadStyle","Dropzone","CloudUploadOutlined","Axios","Grid","SingleFileUpload","FileUpload","props","classes","Images","setImages","onDrop","files","concat","refreshFunction","onDelete","image","currentIndex","indexOf","newImages","splice","upload","getRootProps","getInputProps","display","alignItems","justifyContent","color","fontSize","marginLeft","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { fileUploadStyle } from './FileUpload.style';\nimport Dropzone from 'react-dropzone';\nimport {CloudUploadOutlined} from \"@ant-design/icons\"\nimport Axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport SingleFileUpload from './SingleFileUpload';\nfunction FileUpload(props) {\n    const classes = fileUploadStyle();\n    const [Images, setImages] = useState([])\n    const onDrop = (files) => {\n        setImages(Images.concat(files))\n        props.refreshFunction(Images.concat(files))\n    }\n\n    const onDelete = (image) => {\n        const currentIndex = Images.indexOf(image);\n        \n        let newImages = [...Images]\n        newImages.splice(currentIndex, 1)\n\n        setImages(newImages)\n        props.refreshFunction(newImages)\n    }\n    \n    return (\n        <div>\n            <Grid xs={4} className={classes.upload}>\n            <Dropzone\n                onDrop={onDrop}\n                multiple={true}\n                maxSize={99999999999999999999999999999999}\n            >\n                {({ getRootProps, getInputProps }) => (\n                    <div style={{\n                        display: 'block', alignItems: 'center', justifyContent: 'center'\n                    }}\n                        {...getRootProps()}\n                    >\n                        <input {...getInputProps()} />\n                        <CloudUploadOutlined style={{color: \"#6990F2\",fontSize:\"100px\",marginLeft:\"130px\"}}/>\n                        <p style={{color: \"#6990F2\",fontSize:\"20px\"}}>Browse or Drag and Drop files to Upload</p>\n                    </div>\n                )}\n            </Dropzone>\n            </Grid>\n            <Grid xs={9}>\n\n            </Grid>\n            <Grid xs={9}>\n                {Images.map(image=>{\n                    <SingleFileUpload\n                        file={image}\n                        onDelete = {onDelete}\n                        setImages = {setImages}\n                    />\n                })}\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default FileUpload\n            {/* <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\n\n                {Images.map((image, index) => (\n                    <div onClick={() => onDelete(image)}>\n                <img style={{ minWidth: '300px', width: '300px', height: '240px' }} src={`${image}`} alt={`Img-${index}`} />}*/}\n"]},"metadata":{},"sourceType":"module"}