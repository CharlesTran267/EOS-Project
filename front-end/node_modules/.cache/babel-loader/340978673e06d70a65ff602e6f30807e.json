{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\EOS Project\\\\front-end\\\\src\\\\View\\\\ContributePage\\\\ContributePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport FileUpload from './FileUpload.js';\nimport axios from 'axios';\nimport Table from './Table';\nimport { Grid, TextField, Button, Card, CardContent, Typography } from '@material-ui/core';\nimport { contributeStyle } from './ContributePage.style.tsx';\nimport MenuItem from '@mui/material/MenuItem';\nimport { isClassExpression } from 'typescript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst gsValue = [0, 1, 2, 3, 4];\nconst pTypes = [\"Pyroxene\", \"Plagioclase\", \"Other minerals\", \"Altered material\", \"Glassy\"];\nconst gTypes = [\"Juvenile\", \"Non-juvenile\"];\nconst crystallinity = [\"Low Transparent\", \"Low Black\", \"Mid\", \"High\"];\nconst alterations = [\"None\", \"Slight\", \"Moderate\"];\nconst shapes = [\"Blocky\", \"Fluidal\", \"Microtubular\", \"Highly vesicular\", \"Spongy\"];\n\nfunction ContributePage(props) {\n  _s();\n\n  const classes = contributeStyle();\n  const [volcName, setVolcName] = useState(\"\");\n  const [volcValid, setVolcValid] = useState({\n    error: true,\n    helperText: \"\"\n  });\n  const [magnification, setMg] = useState(null);\n  const [magValid, setMagValid] = useState({\n    error: true,\n    helperText: \"\"\n  });\n  const [gsLow, setGsLow] = useState();\n  const [gsLowValid, setGsLowValid] = useState({\n    error: true,\n    helperText: \"\"\n  });\n  const [gsUp, setGsUp] = useState();\n  const [gsUpValid, setGsUpValid] = useState({\n    error: true,\n    helperText: \"\"\n  });\n  const [pType, setPType] = useState();\n  const [pValid, setPValid] = useState({\n    error: true,\n    helperText: \"\"\n  });\n  const [gType, setGType] = useState();\n  const [gValid, setGValid] = useState({\n    error: true,\n    helperText: \"\"\n  });\n  const [crys, setCrys] = useState();\n  const [crysValid, setCrysValid] = useState({\n    error: true,\n    helperText: \"\"\n  });\n  const [alteration, setAlt] = useState();\n  const [altValid, setAltValid] = useState({\n    error: true,\n    helperText: \"\"\n  });\n  const [shape, setShape] = useState();\n  const [shapeValid, setShapeValid] = useState({\n    error: true,\n    helperText: \"\"\n  });\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const [data, setData] = useState([]);\n  const [Images, setImages] = useState([]);\n\n  const onVolcChange = event => {\n    setVolcName(event.currentTarget.value);\n  };\n\n  const onMgChange = event => {\n    setMg(event.currentTarget.value);\n  };\n\n  const onGsLowChange = event => {\n    setGsLow(event.currentTarget.value);\n  };\n\n  const onGsUpChange = event => {\n    setGsUp(event.currentTarget.value);\n  };\n\n  const onPTypeChange = event => {\n    setPType(event.currentTarget.value);\n  };\n\n  const onGTypeChange = event => {\n    setGType(event.currentTarget.value);\n  };\n\n  const onCrysChange = event => {\n    setCrys(event.currentTarget.value);\n  };\n\n  const onAltChange = event => {\n    setAlt(event.currentTarget.value);\n  };\n\n  const onShapeChange = event => {\n    setShape(event.currentTarget.value);\n  };\n\n  const updateImages = newImages => {\n    setImages(newImages);\n  };\n\n  const handleClick = () => {\n    setButtonClicked(!buttonClicked);\n    let newData = [];\n\n    for (var i = 0; i < Images.length; i++) {\n      const particle = {\n        volc_name: volcName,\n        mag: magnification,\n        gsLow: gsLow,\n        gsUp: gsUp,\n        pType: pType,\n        gType: gType,\n        crys: crys,\n        alteration: alteration,\n        shape: shape,\n        image_path: Images[i]\n      };\n      newData.push(particle);\n    }\n\n    setData(newData);\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    if (!volcName || !magnification || !gsLow || !gsUp) {\n      return alert('Fill all the compulsory fields first!');\n    }\n\n    if (gsLow > gsUp) {\n      return alert('Grain size lower bound cannot be higher than upper bound');\n    }\n\n    var failed = false;\n\n    for (var i = 0; i < data.length; i++) {\n      const particle = {\n        id: i + 1,\n        index: 1,\n        instrument: \"b\",\n        imgURL: data[i].image_path,\n        particleType: data[i].pType,\n        glassyType: data[i].gType,\n        crystallinity: data[i].crys,\n        alteration: data[i].alteration,\n        shape: data[i].shape,\n        volc_id: 1,\n        volc_name: data[i].volc_name,\n        afe_id: 1,\n        gen_id: 1,\n        microscope: \"\",\n        software: \"\",\n        device: \"\",\n        magnification: \"\",\n        ligh_intensity: \"\",\n        epis_dias_light: \"\",\n        scale_ref: \"\"\n      };\n      await axios.post(\"/volcanoes/particles/add\", particle).catch(err => console.log(err), failed = true);\n      const image = {\n        imageURL: `${data[i].image_path}`,\n        gsLow: data[i].gsLow,\n        gsUp: data[i].gsUp,\n        magnification: data[i].magnification,\n        volc_id: 1,\n        par_id: i\n      };\n      await axios.post(\"/volcanoes/images/add\", image).catch(err => console.log(err), failed = true);\n    }\n\n    if (!failed) props.history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"80%\",\n      margin: '2rem auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      gutterBottom: true,\n      variant: \"h4\",\n      align: \"center\",\n      style: {\n        fontWeight: \"600\"\n      },\n      children: \"Help Us Expand Our Database!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          maxWidth: \"100%\",\n          padding: \"20px 5px\",\n          margin: \"0 auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                item: true,\n                style: {\n                  bottom: 50\n                },\n                children: /*#__PURE__*/_jsxDEV(FileUpload, {\n                  refreshFunction: updateImages\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  placeholder: \"Enter volcano name\",\n                  label: \"Volcano Name\",\n                  variant: \"outlined\",\n                  value: volcName,\n                  onChange: onVolcChange,\n                  fullWidth: true,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  placeholder: \"Enter number only (E.g. 1.4 instead of 1.4x)\",\n                  label: \"Magnification\",\n                  variant: \"outlined\",\n                  type: \"number\",\n                  value: magnification,\n                  onChange: onMgChange,\n                  fullWidth: true,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Grain Size Lower Bound\",\n                  variant: \"outlined\",\n                  select: true,\n                  value: gsLow,\n                  onChange: onGsLowChange,\n                  fullWidth: true,\n                  helperText: \"Please ensure Upper Bound is greater than or equal to Lower Bound\",\n                  required: true,\n                  children: gsValue.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: [item, \" \"]\n                  }, item, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Grain Size Upper Bound\",\n                  variant: \"outlined\",\n                  select: true,\n                  value: gsUp,\n                  onChange: onGsUpChange,\n                  fullWidth: true,\n                  required: true,\n                  children: gsValue.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: [item, \" \"]\n                  }, item, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    color: \"#7d7d7d\"\n                  },\n                  children: \" Tell us more about your data:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Particle Type\",\n                  variant: \"outlined\",\n                  select: true,\n                  value: pType,\n                  onChange: onPTypeChange,\n                  fullWidth: true,\n                  required: true,\n                  children: pTypes.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: [item, \" \"]\n                  }, item, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Shape\",\n                  variant: \"outlined\",\n                  select: true,\n                  value: shape,\n                  onChange: onShapeChange,\n                  fullWidth: true,\n                  optional: true,\n                  children: shapes.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: [item, \" \"]\n                  }, item, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Glassy Type\",\n                  variant: \"outlined\",\n                  select: true,\n                  value: gType,\n                  onChange: onGTypeChange,\n                  fullWidth: true,\n                  optional: true,\n                  children: gTypes.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: [item, \" \"]\n                  }, item, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Crystallinity\",\n                  variant: \"outlined\",\n                  select: true,\n                  value: crys,\n                  onChange: onCrysChange,\n                  fullWidth: true,\n                  optional: true,\n                  children: crystallinity.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: [item, \" \"]\n                  }, item, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Alteration\",\n                  variant: \"outlined\",\n                  select: true,\n                  value: alteration,\n                  onChange: onAltChange,\n                  fullWidth: true,\n                  optional: true,\n                  children: alterations.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: [item, \" \"]\n                  }, item, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), buttonClicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.tableButton,\n              variant: \"contained\",\n              color: \"success\",\n              onClick: () => {\n                handleClick();\n              },\n              style: {\n                marginBottom: \"10px\"\n              },\n              children: \"Hide Table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              data: data,\n              setData: setData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.tableButton,\n              variant: \"contained\",\n              color: \"success\",\n              onClick: () => {\n                handleClick();\n              },\n              style: {\n                marginBottom: \"10px\"\n              },\n              children: \"Show in Table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.submitButton,\n            variant: \"contained\",\n            onClick: onSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContributePage, \"coO1rCGlDSd+Utuwa4bALo4h/K4=\");\n\n_c = ContributePage;\nexport default ContributePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributePage\");","map":{"version":3,"sources":["C:/Users/User/Desktop/EOS Project/front-end/src/View/ContributePage/ContributePage.js"],"names":["React","useState","useEffect","FileUpload","axios","Table","Grid","TextField","Button","Card","CardContent","Typography","contributeStyle","MenuItem","isClassExpression","Title","gsValue","pTypes","gTypes","crystallinity","alterations","shapes","ContributePage","props","classes","volcName","setVolcName","volcValid","setVolcValid","error","helperText","magnification","setMg","magValid","setMagValid","gsLow","setGsLow","gsLowValid","setGsLowValid","gsUp","setGsUp","gsUpValid","setGsUpValid","pType","setPType","pValid","setPValid","gType","setGType","gValid","setGValid","crys","setCrys","crysValid","setCrysValid","alteration","setAlt","altValid","setAltValid","shape","setShape","shapeValid","setShapeValid","buttonClicked","setButtonClicked","data","setData","Images","setImages","onVolcChange","event","currentTarget","value","onMgChange","onGsLowChange","onGsUpChange","onPTypeChange","onGTypeChange","onCrysChange","onAltChange","onShapeChange","updateImages","newImages","handleClick","newData","i","length","particle","volc_name","mag","image_path","push","onSubmit","preventDefault","alert","failed","id","index","instrument","imgURL","particleType","glassyType","volc_id","afe_id","gen_id","microscope","software","device","ligh_intensity","epis_dias_light","scale_ref","post","catch","err","console","log","image","imageURL","par_id","history","maxWidth","margin","fontWeight","padding","bottom","map","item","color","tableButton","marginBottom","submitButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,IAAlC,EAAwCC,WAAxC,EAAqDC,UAArD,QAAuE,mBAAvE;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,iBAAT,QAAkC,YAAlC;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYJ,UAAlB;AAEA,MAAMK,OAAO,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAhB;AACA,MAAMC,MAAM,GAAI,CAAC,UAAD,EAAY,aAAZ,EAA0B,gBAA1B,EAA2C,kBAA3C,EAA8D,QAA9D,CAAhB;AACA,MAAMC,MAAM,GAAG,CAAC,UAAD,EAAY,cAAZ,CAAf;AACA,MAAMC,aAAa,GAAG,CAAC,iBAAD,EAAmB,WAAnB,EAAgC,KAAhC,EAAuC,MAAvC,CAAtB;AACA,MAAMC,WAAW,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,UAAnB,CAApB;AACA,MAAMC,MAAM,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,cAAtB,EAAqC,kBAArC,EAAwD,QAAxD,CAAf;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAMC,OAAO,GAAGZ,eAAe,EAA/B;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC0B,SAAD,EAAWC,YAAX,IAA2B3B,QAAQ,CAAC;AACtC4B,IAAAA,KAAK,EAAC,IADgC;AAEtCC,IAAAA,UAAU,EAAC;AAF2B,GAAD,CAAzC;AAIA,QAAM,CAACC,aAAD,EAAgBC,KAAhB,IAAyB/B,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACgC,QAAD,EAAUC,WAAV,IAAyBjC,QAAQ,CAAC;AACpC4B,IAAAA,KAAK,EAAC,IAD8B;AAEpCC,IAAAA,UAAU,EAAC;AAFyB,GAAD,CAAvC;AAIA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBnC,QAAQ,EAAjC;AACA,QAAM,CAACoC,UAAD,EAAYC,aAAZ,IAA6BrC,QAAQ,CAAC;AACxC4B,IAAAA,KAAK,EAAC,IADkC;AAExCC,IAAAA,UAAU,EAAC;AAF6B,GAAD,CAA3C;AAIA,QAAM,CAACS,IAAD,EAAMC,OAAN,IAAiBvC,QAAQ,EAA/B;AACA,QAAM,CAACwC,SAAD,EAAWC,YAAX,IAA2BzC,QAAQ,CAAC;AACtC4B,IAAAA,KAAK,EAAC,IADgC;AAEtCC,IAAAA,UAAU,EAAC;AAF2B,GAAD,CAAzC;AAIA,QAAM,CAACa,KAAD,EAAOC,QAAP,IAAmB3C,QAAQ,EAAjC;AACA,QAAM,CAAC4C,MAAD,EAAQC,SAAR,IAAqB7C,QAAQ,CAAC;AAChC4B,IAAAA,KAAK,EAAC,IAD0B;AAEhCC,IAAAA,UAAU,EAAC;AAFqB,GAAD,CAAnC;AAIA,QAAM,CAACiB,KAAD,EAAOC,QAAP,IAAmB/C,QAAQ,EAAjC;AACA,QAAM,CAACgD,MAAD,EAAQC,SAAR,IAAqBjD,QAAQ,CAAC;AAChC4B,IAAAA,KAAK,EAAC,IAD0B;AAEhCC,IAAAA,UAAU,EAAC;AAFqB,GAAD,CAAnC;AAIA,QAAM,CAACqB,IAAD,EAAMC,OAAN,IAAiBnD,QAAQ,EAA/B;AACA,QAAM,CAACoD,SAAD,EAAWC,YAAX,IAA2BrD,QAAQ,CAAC;AACtC4B,IAAAA,KAAK,EAAC,IADgC;AAEtCC,IAAAA,UAAU,EAAC;AAF2B,GAAD,CAAzC;AAIA,QAAM,CAACyB,UAAD,EAAaC,MAAb,IAAuBvD,QAAQ,EAArC;AACA,QAAM,CAACwD,QAAD,EAAUC,WAAV,IAAyBzD,QAAQ,CAAC;AACpC4B,IAAAA,KAAK,EAAC,IAD8B;AAEpCC,IAAAA,UAAU,EAAC;AAFyB,GAAD,CAAvC;AAIA,QAAM,CAAC6B,KAAD,EAAQC,QAAR,IAAoB3D,QAAQ,EAAlC;AACA,QAAM,CAAC4D,UAAD,EAAYC,aAAZ,IAA6B7D,QAAQ,CAAC;AACxC4B,IAAAA,KAAK,EAAC,IADkC;AAExCC,IAAAA,UAAU,EAAC;AAF6B,GAAD,CAA3C;AAIA,QAAM,CAACiC,aAAD,EAAgBC,gBAAhB,IAAoC/D,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACgE,IAAD,EAAMC,OAAN,IAAiBjE,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACkE,MAAD,EAASC,SAAT,IAAsBnE,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMoE,YAAY,GAAIC,KAAD,IAAS;AAC5B5C,IAAAA,WAAW,CAAC4C,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAX;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAIH,KAAD,IAAS;AAC1BtC,IAAAA,KAAK,CAACsC,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAL;AACD,GAFD;;AAGA,QAAME,aAAa,GAAIJ,KAAD,IAAS;AAC7BlC,IAAAA,QAAQ,CAACkC,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAR;AACD,GAFD;;AAGA,QAAMG,YAAY,GAAIL,KAAD,IAAS;AAC5B9B,IAAAA,OAAO,CAAC8B,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAP;AACD,GAFD;;AAGA,QAAMI,aAAa,GAAIN,KAAD,IAAS;AAC7B1B,IAAAA,QAAQ,CAAC0B,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAR;AACD,GAFD;;AAGA,QAAMK,aAAa,GAAIP,KAAD,IAAS;AAC7BtB,IAAAA,QAAQ,CAACsB,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAR;AACD,GAFD;;AAGA,QAAMM,YAAY,GAAIR,KAAD,IAAS;AAC5BlB,IAAAA,OAAO,CAACkB,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAP;AACD,GAFD;;AAGA,QAAMO,WAAW,GAAIT,KAAD,IAAS;AAC3Bd,IAAAA,MAAM,CAACc,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAN;AACD,GAFD;;AAGA,QAAMQ,aAAa,GAAIV,KAAD,IAAS;AAC7BV,IAAAA,QAAQ,CAACU,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAR;AACD,GAFD;;AAGA,QAAMS,YAAY,GAAIC,SAAD,IAAe;AAChCd,IAAAA,SAAS,CAACc,SAAD,CAAT;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAG,MAAI;AACpBnB,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACA,QAAIqB,OAAO,GAAG,EAAd;;AACA,SAAI,IAAIC,CAAC,GAAE,CAAX,EAAaA,CAAC,GAAClB,MAAM,CAACmB,MAAtB,EAA6BD,CAAC,EAA9B,EAAiC;AAC7B,YAAME,QAAQ,GAAC;AACXC,QAAAA,SAAS,EAAE/D,QADA;AAEbgE,QAAAA,GAAG,EAAE1D,aAFQ;AAGbI,QAAAA,KAAK,EAAEA,KAHM;AAIbI,QAAAA,IAAI,EAAEA,IAJO;AAKbI,QAAAA,KAAK,EAAEA,KALM;AAMbI,QAAAA,KAAK,EAAEA,KANM;AAObI,QAAAA,IAAI,EAAEA,IAPO;AAQbI,QAAAA,UAAU,EAAEA,UARC;AASbI,QAAAA,KAAK,EAAEA,KATM;AAUb+B,QAAAA,UAAU,EAACvB,MAAM,CAACkB,CAAD;AAVJ,OAAf;AAYAD,MAAAA,OAAO,CAACO,IAAR,CAAaJ,QAAb;AAEH;;AACDrB,IAAAA,OAAO,CAACkB,OAAD,CAAP;AACH,GApBD;;AAqBA,QAAMQ,QAAQ,GAAG,MAAMtB,KAAN,IAAgB;AAC7BA,IAAAA,KAAK,CAACuB,cAAN;;AAEA,QAAI,CAACpE,QAAD,IAAa,CAACM,aAAd,IAA+B,CAACI,KAAhC,IACA,CAACI,IADL,EACa;AACT,aAAOuD,KAAK,CAAC,uCAAD,CAAZ;AACH;;AAED,QAAG3D,KAAK,GAAGI,IAAX,EAAiB;AACb,aAAOuD,KAAK,CAAC,0DAAD,CAAZ;AACH;;AACD,QAAIC,MAAM,GAAC,KAAX;;AACA,SAAI,IAAIV,CAAC,GAAE,CAAX,EAAaA,CAAC,GAACpB,IAAI,CAACqB,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,YAAME,QAAQ,GAAE;AACdS,QAAAA,EAAE,EAAEX,CAAC,GAAC,CADQ;AAEdY,QAAAA,KAAK,EAAE,CAFO;AAGdC,QAAAA,UAAU,EAAC,GAHG;AAIdC,QAAAA,MAAM,EAAClC,IAAI,CAACoB,CAAD,CAAJ,CAAQK,UAJD;AAKdU,QAAAA,YAAY,EAAEnC,IAAI,CAACoB,CAAD,CAAJ,CAAQ1C,KALR;AAMd0D,QAAAA,UAAU,EAAEpC,IAAI,CAACoB,CAAD,CAAJ,CAAQtC,KANN;AAOd5B,QAAAA,aAAa,EAAC8C,IAAI,CAACoB,CAAD,CAAJ,CAAQlC,IAPR;AAQdI,QAAAA,UAAU,EAAEU,IAAI,CAACoB,CAAD,CAAJ,CAAQ9B,UARN;AASdI,QAAAA,KAAK,EAACM,IAAI,CAACoB,CAAD,CAAJ,CAAQ1B,KATA;AAUd2C,QAAAA,OAAO,EAAE,CAVK;AAWdd,QAAAA,SAAS,EAAEvB,IAAI,CAACoB,CAAD,CAAJ,CAAQG,SAXL;AAYde,QAAAA,MAAM,EAAE,CAZM;AAadC,QAAAA,MAAM,EAAE,CAbM;AAcdC,QAAAA,UAAU,EAAE,EAdE;AAedC,QAAAA,QAAQ,EAAE,EAfI;AAgBdC,QAAAA,MAAM,EAAE,EAhBM;AAiBd5E,QAAAA,aAAa,EAAE,EAjBD;AAkBd6E,QAAAA,cAAc,EAAE,EAlBF;AAmBdC,QAAAA,eAAe,EAAE,EAnBH;AAoBdC,QAAAA,SAAS,EAAE;AApBG,OAAhB;AAsBC,YAAM1G,KAAK,CAAC2G,IAAN,CAAW,0BAAX,EAAuCxB,QAAvC,EACFyB,KADE,CACIC,GAAG,IAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADT,EAC0BlB,MAAM,GAAC,IADjC,CAAN;AAED,YAAMqB,KAAK,GAAC;AACRC,QAAAA,QAAQ,EAAE,GAAEpD,IAAI,CAACoB,CAAD,CAAJ,CAAQK,UAAW,EADvB;AAERvD,QAAAA,KAAK,EAAC8B,IAAI,CAACoB,CAAD,CAAJ,CAAQlD,KAFN;AAGRI,QAAAA,IAAI,EAAE0B,IAAI,CAACoB,CAAD,CAAJ,CAAQ9C,IAHN;AAIRR,QAAAA,aAAa,EAAEkC,IAAI,CAACoB,CAAD,CAAJ,CAAQtD,aAJf;AAKRuE,QAAAA,OAAO,EAAC,CALA;AAMRgB,QAAAA,MAAM,EAACjC;AANC,OAAZ;AAQE,YAAMjF,KAAK,CAAC2G,IAAN,CAAW,uBAAX,EAAmCK,KAAnC,EACLJ,KADK,CACCC,GAAG,IAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADN,EACuBlB,MAAM,GAAC,IAD9B,CAAN;AAGH;;AAED,QAAG,CAACA,MAAJ,EAAYxE,KAAK,CAACgG,OAAN,CAAc5B,IAAd,CAAmB,GAAnB;AACb,GAnDH;;AAoDA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAE6B,MAAAA,QAAQ,EAAC,KAAX;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAZ;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAyB,MAAA,OAAO,EAAC,IAAjC;AAAsC,MAAA,KAAK,EAAC,QAA5C;AAAqD,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAC;AAAZ,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAIF,QAAC,IAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEF,UAAAA,QAAQ,EAAE,MAAZ;AAAoBG,UAAAA,OAAO,EAAE,UAA7B;AAAyCF,UAAAA,MAAM,EAAE;AAAjD,SAAb;AAAA,+BACE,QAAC,WAAD;AAAA,kCAEE;AAAA,mCAEE,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAE,EAAV;AAAc,gBAAA,IAAI,MAAlB;AAAmB,gBAAA,KAAK,EAAE;AAACG,kBAAAA,MAAM,EAAC;AAAR,iBAA1B;AAAA,uCACI,QAAC,UAAD;AAAY,kBAAA,eAAe,EAAE3C;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAE,EAAV;AAAc,gBAAA,IAAI,MAAlB;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,WAAW,EAAC,oBADd;AAEE,kBAAA,KAAK,EAAC,cAFR;AAGE,kBAAA,OAAO,EAAC,UAHV;AAIE,kBAAA,KAAK,EAAExD,QAJT;AAKE,kBAAA,QAAQ,EAAE4C,YALZ;AAME,kBAAA,SAAS,MANX;AAOE,kBAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF,eAcE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,uCACI,QAAC,SAAD;AACI,kBAAA,WAAW,EAAC,8CADhB;AAEI,kBAAA,KAAK,EAAC,eAFV;AAGI,kBAAA,OAAO,EAAC,UAHZ;AAII,kBAAA,IAAI,EAAC,QAJT;AAKI,kBAAA,KAAK,EAAEtC,aALX;AAMI,kBAAA,QAAQ,EAAE0C,UANd;AAOI,kBAAA,SAAS,MAPb;AAQI,kBAAA,QAAQ;AARZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAdF,eA0BE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,uCACI,QAAC,SAAD;AACI,kBAAA,KAAK,EAAC,wBADV;AAEI,kBAAA,OAAO,EAAC,UAFZ;AAGI,kBAAA,MAAM,MAHV;AAII,kBAAA,KAAK,EAAEtC,KAJX;AAKI,kBAAA,QAAQ,EAAEuC,aALd;AAMI,kBAAA,SAAS,MANb;AAOI,kBAAA,UAAU,EAAC,mEAPf;AAQI,kBAAA,QAAQ,MARZ;AAAA,4BASS1D,OAAO,CAAC6G,GAAR,CAAYC,IAAI,iBACjB,QAAC,QAAD;AAAuB,oBAAA,KAAK,EAAEA,IAA9B;AAAA,+BAAqCA,IAArC;AAAA,qBAAiBA,IAAjB;AAAA;AAAA;AAAA;AAAA,0BADC;AATT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBA1BF,eAyCE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,uCACI,QAAC,SAAD;AACI,kBAAA,KAAK,EAAC,wBADV;AAEI,kBAAA,OAAO,EAAC,UAFZ;AAGI,kBAAA,MAAM,MAHV;AAII,kBAAA,KAAK,EAAEvF,IAJX;AAKI,kBAAA,QAAQ,EAAEoC,YALd;AAMI,kBAAA,SAAS,MANb;AAOI,kBAAA,QAAQ,MAPZ;AAAA,4BAQS3D,OAAO,CAAC6G,GAAR,CAAYC,IAAI,iBACjB,QAAC,QAAD;AAAuB,oBAAA,KAAK,EAAEA,IAA9B;AAAA,+BAAqCA,IAArC;AAAA,qBAAiBA,IAAjB;AAAA;AAAA;AAAA;AAAA,0BADC;AART;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAzCF,eAuDE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACI,QAAC,UAAD;AAAY,kBAAA,KAAK,EAAE;AAACC,oBAAAA,KAAK,EAAC;AAAP,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAvDF,eA0DE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,uCACI,QAAC,SAAD;AACI,kBAAA,KAAK,EAAC,eADV;AAEI,kBAAA,OAAO,EAAC,UAFZ;AAGI,kBAAA,MAAM,MAHV;AAII,kBAAA,KAAK,EAAEpF,KAJX;AAKI,kBAAA,QAAQ,EAAEiC,aALd;AAMI,kBAAA,SAAS,MANb;AAOI,kBAAA,QAAQ,MAPZ;AAAA,4BAQS3D,MAAM,CAAC4G,GAAP,CAAWC,IAAI,iBAChB,QAAC,QAAD;AAAuB,oBAAA,KAAK,EAAEA,IAA9B;AAAA,+BAAqCA,IAArC;AAAA,qBAAiBA,IAAjB;AAAA;AAAA;AAAA;AAAA,0BADC;AART;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBA1DF,eAwEE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,uCACA,QAAC,SAAD;AACQ,kBAAA,KAAK,EAAC,OADd;AAEQ,kBAAA,OAAO,EAAC,UAFhB;AAGQ,kBAAA,MAAM,MAHd;AAIQ,kBAAA,KAAK,EAAEnE,KAJf;AAKQ,kBAAA,QAAQ,EAAEqB,aALlB;AAMQ,kBAAA,SAAS,MANjB;AAOQ,kBAAA,QAAQ,MAPhB;AAAA,4BAQa3D,MAAM,CAACwG,GAAP,CAAWC,IAAI,iBAChB,QAAC,QAAD;AAAuB,oBAAA,KAAK,EAAEA,IAA9B;AAAA,+BAAqCA,IAArC;AAAA,qBAAiBA,IAAjB;AAAA;AAAA;AAAA;AAAA,0BADC;AARb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBAxEF,eAsFE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,uCACA,QAAC,SAAD;AACQ,kBAAA,KAAK,EAAC,aADd;AAEQ,kBAAA,OAAO,EAAC,UAFhB;AAGQ,kBAAA,MAAM,MAHd;AAIQ,kBAAA,KAAK,EAAE/E,KAJf;AAKQ,kBAAA,QAAQ,EAAE8B,aALlB;AAMQ,kBAAA,SAAS,MANjB;AAOQ,kBAAA,QAAQ,MAPhB;AAAA,4BAQa3D,MAAM,CAAC2G,GAAP,CAAWC,IAAI,iBAChB,QAAC,QAAD;AAAuB,oBAAA,KAAK,EAAEA,IAA9B;AAAA,+BAAqCA,IAArC;AAAA,qBAAiBA,IAAjB;AAAA;AAAA;AAAA;AAAA,0BADC;AARb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBAtFF,eAoGE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,uCACA,QAAC,SAAD;AACQ,kBAAA,KAAK,EAAC,eADd;AAEQ,kBAAA,OAAO,EAAC,UAFhB;AAGQ,kBAAA,MAAM,MAHd;AAIQ,kBAAA,KAAK,EAAE3E,IAJf;AAKQ,kBAAA,QAAQ,EAAE2B,YALlB;AAMQ,kBAAA,SAAS,MANjB;AAOQ,kBAAA,QAAQ,MAPhB;AAAA,4BAQa3D,aAAa,CAAC0G,GAAd,CAAkBC,IAAI,iBACvB,QAAC,QAAD;AAAuB,oBAAA,KAAK,EAAEA,IAA9B;AAAA,+BAAqCA,IAArC;AAAA,qBAAiBA,IAAjB;AAAA;AAAA;AAAA;AAAA,0BADC;AARb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBApGF,eAkHE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,uCACA,QAAC,SAAD;AACQ,kBAAA,KAAK,EAAC,YADd;AAEQ,kBAAA,OAAO,EAAC,UAFhB;AAGQ,kBAAA,MAAM,MAHd;AAIQ,kBAAA,KAAK,EAAEvE,UAJf;AAKQ,kBAAA,QAAQ,EAAEwB,WALlB;AAMQ,kBAAA,SAAS,MANjB;AAOQ,kBAAA,QAAQ,MAPhB;AAAA,4BAQa3D,WAAW,CAACyG,GAAZ,CAAgBC,IAAI,iBACrB,QAAC,QAAD;AAAuB,oBAAA,KAAK,EAAEA,IAA9B;AAAA,+BAAqCA,IAArC;AAAA,qBAAiBA,IAAjB;AAAA;AAAA;AAAA;AAAA,0BADC;AARb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBAlHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,kBAFF,EAsIG/D,aAAa,gBAAC;AAAA,oCACP;AACI,cAAA,SAAS,EAAEvC,OAAO,CAACwG,WADvB;AAEI,cAAA,OAAO,EAAC,WAFZ;AAGI,cAAA,KAAK,EAAC,SAHV;AAII,cAAA,OAAO,EAAE,MAAI;AAAC7C,gBAAAA,WAAW;AAAG,eAJhC;AAKI,cAAA,KAAK,EAAE;AAAC8C,gBAAAA,YAAY,EAAC;AAAd,eALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADO,eAUP,QAAC,KAAD;AAAO,cAAA,IAAI,EAAEhE,IAAb;AAAmB,cAAA,OAAO,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA,oBAVO;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAD,gBAYN;AAAA,mCACA;AACI,cAAA,SAAS,EAAE1C,OAAO,CAACwG,WADvB;AAEI,cAAA,OAAO,EAAC,WAFZ;AAGI,cAAA,KAAK,EAAC,SAHV;AAII,cAAA,OAAO,EAAE,MAAI;AAAC7C,gBAAAA,WAAW;AAAG,eAJhC;AAKI,cAAA,KAAK,EAAE;AAAC8C,gBAAAA,YAAY,EAAC;AAAd,eALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAlJV,eA4JU;AACI,YAAA,SAAS,EAAEzG,OAAO,CAAC0G,YADvB;AAEI,YAAA,OAAO,EAAC,WAFZ;AAGI,YAAA,OAAO,EAAEtC,QAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5JV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkQH;;GA5ZQtE,c;;KAAAA,c;AA8ZT,eAAeA,cAAf","sourcesContent":["import React, { useState,useEffect } from 'react'\nimport FileUpload from './FileUpload.js'\nimport axios from 'axios';\nimport Table from './Table'\nimport { Grid, TextField, Button, Card, CardContent, Typography } from '@material-ui/core';\nimport { contributeStyle } from './ContributePage.style.tsx';\nimport MenuItem from '@mui/material/MenuItem';\nimport { isClassExpression } from 'typescript';\n\nconst { Title } = Typography;\n\nconst gsValue = [0,1,2,3,4];\nconst pTypes  = [\"Pyroxene\",\"Plagioclase\",\"Other minerals\",\"Altered material\",\"Glassy\"];\nconst gTypes = [\"Juvenile\",\"Non-juvenile\"];\nconst crystallinity = [\"Low Transparent\",\"Low Black\", \"Mid\", \"High\"];\nconst alterations = [\"None\", \"Slight\", \"Moderate\"];\nconst shapes = [\"Blocky\", \"Fluidal\", \"Microtubular\",\"Highly vesicular\",\"Spongy\"]\n\nfunction ContributePage(props) {\n    const classes = contributeStyle();\n    const [volcName, setVolcName] = useState(\"\");\n    const [volcValid,setVolcValid] = useState({\n        error:true,\n        helperText:\"\"\n    })\n    const [magnification, setMg] = useState(null);\n    const [magValid,setMagValid] = useState({\n        error:true,\n        helperText:\"\"\n    })\n    const [gsLow,setGsLow] = useState();\n    const [gsLowValid,setGsLowValid] = useState({\n        error:true,\n        helperText:\"\"\n    })\n    const [gsUp,setGsUp] = useState();\n    const [gsUpValid,setGsUpValid] = useState({\n        error:true,\n        helperText:\"\"\n    })\n    const [pType,setPType] = useState();\n    const [pValid,setPValid] = useState({\n        error:true,\n        helperText:\"\"\n    })\n    const [gType,setGType] = useState();\n    const [gValid,setGValid] = useState({\n        error:true,\n        helperText:\"\"\n    })\n    const [crys,setCrys] = useState();\n    const [crysValid,setCrysValid] = useState({\n        error:true,\n        helperText:\"\"\n    })\n    const [alteration, setAlt] = useState();\n    const [altValid,setAltValid] = useState({\n        error:true,\n        helperText:\"\"\n    })\n    const [shape, setShape] = useState();\n    const [shapeValid,setShapeValid] = useState({\n        error:true,\n        helperText:\"\"\n    })\n    const [buttonClicked, setButtonClicked] = useState(false)\n    const [data,setData] = useState([])\n    const [Images, setImages] = useState([])\n\n    const onVolcChange = (event)=>{\n      setVolcName(event.currentTarget.value)\n    } \n    const onMgChange = (event)=>{\n      setMg(event.currentTarget.value)\n    } \n    const onGsLowChange = (event)=>{\n      setGsLow(event.currentTarget.value)\n    } \n    const onGsUpChange = (event)=>{\n      setGsUp(event.currentTarget.value)\n    } \n    const onPTypeChange = (event)=>{\n      setPType(event.currentTarget.value)\n    } \n    const onGTypeChange = (event)=>{\n      setGType(event.currentTarget.value)\n    } \n    const onCrysChange = (event)=>{\n      setCrys(event.currentTarget.value)\n    } \n    const onAltChange = (event)=>{\n      setAlt(event.currentTarget.value)\n    } \n    const onShapeChange = (event)=>{\n      setShape(event.currentTarget.value)\n    } \n    const updateImages = (newImages) => {\n        setImages(newImages)\n    }\n    const handleClick = ()=>{\n        setButtonClicked(!buttonClicked)\n        let newData = []\n        for(var i =0;i<Images.length;i++){\n            const particle={\n                volc_name: volcName,\n              mag: magnification,\n              gsLow: gsLow,\n              gsUp: gsUp,\n              pType: pType,\n              gType: gType,\n              crys: crys,\n              alteration: alteration,\n              shape: shape,\n              image_path:Images[i]\n            }\n            newData.push(particle)\n\n        }\n        setData(newData)\n    }\n    const onSubmit = async(event) => {\n        event.preventDefault();\n\n        if (!volcName || !magnification || !gsLow ||\n            !gsUp  ) {\n            return alert('Fill all the compulsory fields first!')\n        }\n        \n        if(gsLow > gsUp) {\n            return alert('Grain size lower bound cannot be higher than upper bound')\n        }\n        var failed=false;\n        for(var i =0;i<data.length;i++){\n          const particle ={\n            id: i+1,\n            index: 1,\n            instrument:\"b\",\n            imgURL:data[i].image_path,\n            particleType: data[i].pType, \n            glassyType: data[i].gType,\n            crystallinity:data[i].crys, \n            alteration: data[i].alteration, \n            shape:data[i].shape,\n            volc_id: 1,\n            volc_name: data[i].volc_name,\n            afe_id: 1,\n            gen_id: 1,\n            microscope: \"\",\n            software: \"\",\n            device: \"\",\n            magnification: \"\",\n            ligh_intensity: \"\",\n            epis_dias_light: \"\",\n            scale_ref: \"\"\n          }\n           await axios.post(\"/volcanoes/particles/add\", particle)\n              .catch(err=>console.log(err),failed=true)\n          const image={\n              imageURL:`${data[i].image_path}`,\n              gsLow:data[i].gsLow,\n              gsUp: data[i].gsUp,\n              magnification: data[i].magnification,\n              volc_id:1,\n              par_id:i\n          }\n            await axios.post(\"/volcanoes/images/add\",image)\n            .catch(err=>console.log(err),failed=true)\n\n        }\n        \n        if(!failed) props.history.push('/')\n      }\n    return (\n        <div style={{ maxWidth:\"80%\",margin: '2rem auto' }}>\n            <Typography gutterBottom variant=\"h4\" align=\"center\" style={{fontWeight:\"600\"}} >\n        Help Us Expand Our Database!\n       </Typography>\n      <Grid>\n        <Card style={{ maxWidth: \"100%\", padding: \"20px 5px\", margin: \"0 auto\" }}>\n          <CardContent>\n\n            <form>\n            \n              <Grid container spacing={1}>\n                <Grid xs={12} item style={{bottom:50}}>\n                    <FileUpload refreshFunction={updateImages}/>\n                </Grid>\n                <Grid xs={12} item>\n                  <TextField \n                    placeholder=\"Enter volcano name\" \n                    label=\"Volcano Name\" \n                    variant=\"outlined\" \n                    value={volcName}\n                    onChange={onVolcChange}\n                    fullWidth \n                    required />\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <TextField \n                        placeholder=\"Enter number only (E.g. 1.4 instead of 1.4x)\" \n                        label=\"Magnification\" \n                        variant=\"outlined\" \n                        type=\"number\"\n                        value={magnification}\n                        onChange={onMgChange}\n                        fullWidth \n                        required >\n                    </TextField>\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <TextField \n                        label=\"Grain Size Lower Bound\" \n                        variant=\"outlined\" \n                        select\n                        value={gsLow}\n                        onChange={onGsLowChange}\n                        fullWidth \n                        helperText=\"Please ensure Upper Bound is greater than or equal to Lower Bound\"\n                        required >\n                            {gsValue.map(item => (\n                            <MenuItem key = {item} value={item}>{item} </MenuItem>\n                            ))}\n                        </TextField>\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <TextField \n                        label=\"Grain Size Upper Bound\" \n                        variant=\"outlined\" \n                        select\n                        value={gsUp}\n                        onChange={onGsUpChange}\n                        fullWidth \n                        required >\n                            {gsValue.map(item => (\n                            <MenuItem key = {item} value={item}>{item} </MenuItem>\n                            ))}\n                    </TextField>\n                </Grid>\n                <Grid item xs={12} >\n                    <Typography style={{color:\"#7d7d7d\"}}> Tell us more about your data:</Typography>\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <TextField \n                        label=\"Particle Type\" \n                        variant=\"outlined\" \n                        select\n                        value={pType}\n                        onChange={onPTypeChange}\n                        fullWidth \n                        required >\n                            {pTypes.map(item => (\n                            <MenuItem key = {item} value={item}>{item} </MenuItem>\n                            ))}\n                    </TextField>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                <TextField \n                        label=\"Shape\" \n                        variant=\"outlined\" \n                        select\n                        value={shape}\n                        onChange={onShapeChange}\n                        fullWidth \n                        optional >\n                            {shapes.map(item => (\n                            <MenuItem key = {item} value={item}>{item} </MenuItem>\n                            ))}\n                    </TextField>\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                <TextField \n                        label=\"Glassy Type\" \n                        variant=\"outlined\" \n                        select\n                        value={gType}\n                        onChange={onGTypeChange}\n                        fullWidth \n                        optional >\n                            {gTypes.map(item => (\n                            <MenuItem key = {item} value={item}>{item} </MenuItem>\n                            ))}\n                    </TextField>\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                <TextField \n                        label=\"Crystallinity\" \n                        variant=\"outlined\" \n                        select\n                        value={crys}\n                        onChange={onCrysChange}\n                        fullWidth \n                        optional >\n                            {crystallinity.map(item => (\n                            <MenuItem key = {item} value={item}>{item} </MenuItem>\n                            ))}\n                    </TextField>\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                <TextField \n                        label=\"Alteration\" \n                        variant=\"outlined\" \n                        select\n                        value={alteration}\n                        onChange={onAltChange}\n                        fullWidth \n                        optional >\n                            {alterations.map(item => (\n                            <MenuItem key = {item} value={item}>{item} </MenuItem>\n                            ))}\n                    </TextField>\n                </Grid>\n              </Grid>\n            </form>\n            {buttonClicked?<div>\n                    <button\n                        className={classes.tableButton}\n                        variant=\"contained\" \n                        color=\"success\"\n                        onClick={()=>{handleClick()}}\n                        style={{marginBottom:\"10px\"}}\n                >\n                    Hide Table\n                </button>\n                    <Table data={data} setData={setData}/>\n                    </div>:\n                    <div>                \n                    <button\n                        className={classes.tableButton}\n                        variant=\"contained\" \n                        color=\"success\"\n                        onClick={()=>{handleClick()}}\n                        style={{marginBottom:\"10px\"}}\n                >\n                    Show in Table\n                </button></div>}\n                    <button\n                        className={classes.submitButton}\n                        variant=\"contained\" \n                        onClick={onSubmit}\n                        >\n                        Submit\n                    </button>\n\n                \n          </CardContent>\n        </Card>\n      </Grid>\n            {/* <Form onSubmit={onSubmit} >\n                \n                <label>Magnification</label>\n                <Input\n                    placeholder=\"Enter the magnification value in number only (E.g. 1.4 instead of 1.4x)\"\n                    onChange={onMgChange}\n                    value={magnification}\n                    type= \"number\"\n                />\n                <br /><br />\n                <label>Grain Size:</label>\n                <label>Lower Bound(Φ)</label>\n                <select onChange={onGsLowChange} value={gsLow}>\n                    {gsValue.map(item => (\n                        <option value={item}>{item} </option>\n                    ))}\n                </select>\n                <br /><br />\n                <label>Upper Bound(Φ)</label>\n                <select onChange={onGsUpChange} value={gsUp}>\n                    {gsValue.map(item => (\n                        <option value={item}>{item} </option>\n                    ))}\n                </select>\n                <br /><br />\n                <h4> Tell us more about your data (Optional)</h4>\n                <label>Particle Type</label>\n                <select onChange={onPTypeChange} value={pType}>\n                    {pTypes.map(item => (\n                        <option value={item}>{item} </option>\n                    ))}\n                </select>\n                <br /><br />\n                <label>Glassy Type</label>\n                <select onChange={onGTypeChange} value={gType}>\n                    {gTypes.map(item => (\n                        <option value={item}>{item} </option>\n                    ))}\n                </select>\n                <br /><br />\n                <label>Crystallinity</label>\n                <select onChange={onCrysChange} value={crys}>\n                    {crystallinity.map(item => (\n                        <option value={item}>{item} </option>\n                    ))}\n                </select>\n                <br /><br />\n                <label>Alteration</label>\n                <select onChange={onAltChange} value={alteration}>\n                    {alterations.map(item => (\n                        <option value={item}>{item} </option>\n                    ))}\n                </select>\n                <br /><br />\n                <label>Shape</label>\n                <select onChange={onShapeChange} value={shape} style={{marginBottom:\"10px\"}}>\n                    {shapes.map(item => (\n                        <option value={item}>{item} </option>\n                    ))}\n                </select>\n                <br /><br />\n                <Button\n                    onClick={()=>{handleClick()}}\n                    style={{marginBottom:\"10px\"}}\n                >\n                    Show in Table\n                </Button>\n                <br/>\n                {buttonClicked?<div>\n                    <Table data={data} setData={setData}/>\n                    <br/>\n                    <Button\n                    onClick={onSubmit}\n                    >\n                     Submit\n                    </Button>\n                    </div>:null}\n                \n\n            </Form> */}\n\n        </div>\n    )\n}\n\nexport default ContributePage"]},"metadata":{},"sourceType":"module"}