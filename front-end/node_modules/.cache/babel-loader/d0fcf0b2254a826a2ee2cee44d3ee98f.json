{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\EOS Project\\\\front-end\\\\src\\\\View\\\\ContributePage\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fileUploadStyle } from './FileUpload.style';\nimport Dropzone from 'react-dropzone';\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\nimport Axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport SingleFileUpload from './SingleFileUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FileUpload({\n  Images,\n  setImages,\n  onDelete\n}) {\n  _s();\n\n  const classes = fileUploadStyle();\n  const [files, setFiles] = useState([]);\n\n  const onDrop = newfiles => {\n    setFiles(files.concat(newfiles));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        className: classes.upload,\n        children: /*#__PURE__*/_jsxDEV(Dropzone, {\n          onDrop: onDrop,\n          multiple: true,\n          maxSize: 99999999999999999999999999999999,\n          children: ({\n            getRootProps,\n            getInputProps\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'block',\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CloudUploadOutlined, {\n              style: {\n                color: \"#6990F2\",\n                fontSize: \"100px\",\n                marginLeft: \"130px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"#6990F2\",\n                fontSize: \"20px\"\n              },\n              children: \"Browse or Drag and Drop files to Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        className: classes.uploadfiles,\n        children: files.map(image => {\n          /*#__PURE__*/\n          _jsxDEV(SingleFileUpload, {\n            file: image,\n            onDelete: onDelete,\n            Images: Images,\n            setImages: setImages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileUpload, \"vb4fSrjGjEwm/PfNnhh3QmYDFDQ=\");\n\n_c = FileUpload;\nexport default FileUpload;\n{\n  /* <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\n      {Images.map((image, index) => (\n         <div onClick={() => onDelete(image)}>\n     <img style={{ minWidth: '300px', width: '300px', height: '240px' }} src={`${image}`} alt={`Img-${index}`} />}*/\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/Users/User/Desktop/EOS Project/front-end/src/View/ContributePage/FileUpload.js"],"names":["React","useEffect","useState","fileUploadStyle","Dropzone","CloudUploadOutlined","Axios","Grid","SingleFileUpload","FileUpload","Images","setImages","onDelete","classes","files","setFiles","onDrop","newfiles","concat","upload","getRootProps","getInputProps","display","alignItems","justifyContent","color","fontSize","marginLeft","uploadfiles","map","image"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAAQC,mBAAR,QAAkC,mBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AACA,SAASC,UAAT,CAAoB;AAACC,EAAAA,MAAD;AAAQC,EAAAA,SAAR;AAAkBC,EAAAA;AAAlB,CAApB,EAAiD;AAAA;;AAC7C,QAAMC,OAAO,GAAGV,eAAe,EAA/B;AACA,QAAM,CAACW,KAAD,EAAOC,QAAP,IAAmBb,QAAQ,CAAC,EAAD,CAAjC;;AACA,QAAMc,MAAM,GAAIC,QAAD,IAAc;AACzBF,IAAAA,QAAQ,CAACD,KAAK,CAACI,MAAN,CAAaD,QAAb,CAAD,CAAR;AACH,GAFD;;AAIA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,SAAS,EAAEJ,OAAO,CAACM,MAArC;AAAA,+BACI,QAAC,QAAD;AACI,UAAA,MAAM,EAAEH,MADZ;AAEI,UAAA,QAAQ,EAAE,IAFd;AAGI,UAAA,OAAO,EAAE,gCAHb;AAAA,oBAKK,CAAC;AAAEI,YAAAA,YAAF;AAAgBC,YAAAA;AAAhB,WAAD,kBACG;AAAK,YAAA,KAAK,EAAE;AACRC,cAAAA,OAAO,EAAE,OADD;AACUC,cAAAA,UAAU,EAAE,QADtB;AACgCC,cAAAA,cAAc,EAAE;AADhD,aAAZ;AAAA,eAGQJ,YAAY,EAHpB;AAAA,oCAKI,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI,QAAC,mBAAD;AAAqB,cAAA,KAAK,EAAE;AAACI,gBAAAA,KAAK,EAAE,SAAR;AAAkBC,gBAAAA,QAAQ,EAAC,OAA3B;AAAmCC,gBAAAA,UAAU,EAAC;AAA9C;AAA5B;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAG,cAAA,KAAK,EAAE;AAACF,gBAAAA,KAAK,EAAE,SAAR;AAAkBC,gBAAAA,QAAQ,EAAC;AAA3B,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAoBI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,SAAS,EAAEb,OAAO,CAACe,WAArC;AAAA,kBACKd,KAAK,CAACe,GAAN,CAAUC,KAAK,IAAE;AACd;AAAA,kBAAC,gBAAD;AACI,YAAA,IAAI,EAAEA,KADV;AAEI,YAAA,QAAQ,EAAIlB,QAFhB;AAGI,YAAA,MAAM,EAAIF,MAHd;AAII,YAAA,SAAS,EAAIC;AAJjB;AAAA;AAAA;AAAA;AAAA;AAMH,SAPA;AADL;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH;;GA3CQF,U;;KAAAA,U;AA6CT,eAAeA,UAAf;AACY;AAAC;AACb;AACA;AACA;AACgI","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { fileUploadStyle } from './FileUpload.style';\nimport Dropzone from 'react-dropzone';\nimport {CloudUploadOutlined} from \"@ant-design/icons\"\nimport Axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport SingleFileUpload from './SingleFileUpload';\nfunction FileUpload({Images,setImages,onDelete}) {\n    const classes = fileUploadStyle();\n    const [files,setFiles] = useState([])\n    const onDrop = (newfiles) => {\n        setFiles(files.concat(newfiles))\n    }\n    \n    return (\n        <div>\n            <Grid container spacing={4}>\n                <Grid item xs={4} className={classes.upload}>\n                    <Dropzone\n                        onDrop={onDrop}\n                        multiple={true}\n                        maxSize={99999999999999999999999999999999}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div style={{\n                                display: 'block', alignItems: 'center', justifyContent: 'center'\n                            }}\n                                {...getRootProps()}\n                            >\n                                <input {...getInputProps()} />\n                                <CloudUploadOutlined style={{color: \"#6990F2\",fontSize:\"100px\",marginLeft:\"130px\"}}/>\n                                <p style={{color: \"#6990F2\",fontSize:\"20px\"}}>Browse or Drag and Drop files to Upload</p>\n                            </div>\n                        )}\n                    </Dropzone>\n                </Grid>\n                <Grid item xs={8} className={classes.uploadfiles}>\n                    {files.map(image=>{\n                        <SingleFileUpload\n                            file={image}\n                            onDelete = {onDelete}\n                            Images = {Images}\n                            setImages = {setImages}\n                        />\n                    })}\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default FileUpload\n            {/* <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\n\n                {Images.map((image, index) => (\n                    <div onClick={() => onDelete(image)}>\n                <img style={{ minWidth: '300px', width: '300px', height: '240px' }} src={`${image}`} alt={`Img-${index}`} />}*/}\n"]},"metadata":{},"sourceType":"module"}