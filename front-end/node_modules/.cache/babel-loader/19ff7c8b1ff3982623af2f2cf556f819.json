{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\EOS Project\\\\front-end\\\\src\\\\View\\\\ContributePage\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fileUploadStyle } from './FileUpload.style';\nimport Dropzone from 'react-dropzone';\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\nimport Axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport SingleFileUpload from './SingleFileUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FileUpload({\n  Images,\n  setImages,\n  onDelete\n}) {\n  _s();\n\n  const classes = fileUploadStyle();\n  const [files, setFiles] = useState([]);\n\n  const onDrop = newfiles => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      },\n      onUploadProgress: progressEvent => {\n        setProgress(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)));\n      }\n    };\n\n    for (var i = 0; i < newfiles.length; i++) {\n      formData.append('files', newfiles[i]);\n    }\n\n    Axios.post('/upload/uploadImage', formData, config).then(response => {\n      if (response.data.success) {\n        console.log(response.data.image);\n        setImages(Images.concat(response.data.image));\n      } else {\n        console.log(\"failed\");\n        alert('Failed to save the Image in Server');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        className: classes.upload,\n        children: /*#__PURE__*/_jsxDEV(Dropzone, {\n          onDrop: onDrop,\n          multiple: true,\n          maxSize: 99999999999999999999999999999999,\n          children: ({\n            getRootProps,\n            getInputProps\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'block',\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CloudUploadOutlined, {\n              style: {\n                color: \"#6990F2\",\n                fontSize: \"100px\",\n                marginLeft: \"130px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"#6990F2\",\n                fontSize: \"20px\"\n              },\n              children: \"Browse or Drag and Drop files to Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 7,\n        className: classes.uploadfiles,\n        children: Images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => onDelete(image),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              minWidth: '300px',\n              width: '300px',\n              height: '210px'\n            },\n            src: `${image}`,\n            alt: `Img-${index}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileUpload, \"vb4fSrjGjEwm/PfNnhh3QmYDFDQ=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/Users/User/Desktop/EOS Project/front-end/src/View/ContributePage/FileUpload.js"],"names":["React","useEffect","useState","fileUploadStyle","Dropzone","CloudUploadOutlined","Axios","Grid","SingleFileUpload","FileUpload","Images","setImages","onDelete","classes","files","setFiles","onDrop","newfiles","formData","FormData","config","header","onUploadProgress","progressEvent","setProgress","parseInt","Math","round","loaded","total","i","length","append","post","then","response","data","success","console","log","image","concat","alert","upload","getRootProps","getInputProps","display","alignItems","justifyContent","color","fontSize","marginLeft","uploadfiles","map","index","minWidth","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { fileUploadStyle } from './FileUpload.style';\nimport Dropzone from 'react-dropzone';\nimport {CloudUploadOutlined} from \"@ant-design/icons\"\nimport Axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport SingleFileUpload from './SingleFileUpload';\nfunction FileUpload({Images,setImages,onDelete}) {\n    const classes = fileUploadStyle();\n    const [files,setFiles] = useState([])\n    const onDrop = (newfiles) => {\n        let formData = new FormData();\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        ,\n            onUploadProgress : progressEvent => {\n                setProgress(\n                    parseInt(\n                        Math.round((progressEvent.loaded * 100) / progressEvent.total)\n                    )\n                );\n            }\n        }\n        for(var i=0;i<newfiles.length;i++){\n            formData.append('files',newfiles[i])\n        }\n        Axios.post('/upload/uploadImage', formData, config)\n            .then(response => {\n                if (response.data.success) {\n                    console.log(response.data.image)\n                    setImages(Images.concat(response.data.image))\n                } else {\n                    console.log(\"failed\")\n                    alert('Failed to save the Image in Server')\n                }\n            })\n    }\n    \n    return (\n        <div>\n            <Grid container justifyContent=\"space-between\">\n                <Grid item xs={4} className={classes.upload}>\n                    <Dropzone\n                        onDrop={onDrop}\n                        multiple={true}\n                        maxSize={99999999999999999999999999999999}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div style={{\n                                display: 'block', alignItems: 'center', justifyContent: 'center'\n                            }}\n                                {...getRootProps()}\n                            >\n                                <input {...getInputProps()} />\n                                <CloudUploadOutlined style={{color: \"#6990F2\",fontSize:\"100px\",marginLeft:\"130px\"}}/>\n                                <p style={{color: \"#6990F2\",fontSize:\"20px\"}}>Browse or Drag and Drop files to Upload</p>\n                            </div>\n                        )}\n                    </Dropzone>\n                </Grid>\n                <Grid item xs={7} className={classes.uploadfiles}>\n                        {Images.map((image, index) => (\n                        <div onClick={() => onDelete(image)}>\n                            <img style={{ minWidth: '300px', width: '300px', height: '210px' }} src={`${image}`} alt={`Img-${index}`} />\n                        </div>))}\n\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default FileUpload\n           "]},"metadata":{},"sourceType":"module"}