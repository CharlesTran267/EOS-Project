{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\EOS Project\\\\front-end\\\\src\\\\View\\\\RegisterPage\\\\RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../_actions/user_actions.js\";\nimport { useDispatch } from \"react-redux\";\nimport { Form, Input, Button, Typography } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nfunction RegisterPage(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      lastName: '',\n      name: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('Name is required'),\n      lastName: Yup.string().required('Last Name is required'),\n      email: Yup.string().email('Email is invalid').required('Email is required'),\n      password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n      confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          email: values.email,\n          password: values.password,\n          name: values.name,\n          lastname: values.lastname,\n          image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n        };\n        dispatch(registerUser(dataToSubmit)).then(response => {\n          if (response.payload.success) {\n            props.history.push(\"/login\");\n          } else {\n            alert(response.payload.err.errmsg);\n          }\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    children: props => {\n      const {\n        values,\n        touched,\n        errors,\n        dirty,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleReset\n      } = props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        style: {\n          background: \"white\",\n          height: \"700px\",\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            minWidth: '375px',\n            marginLeft: \"500px\"\n          },\n          ...formItemLayout,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            style: {\n              marginLeft: \"150px\"\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            required: true,\n            label: \"Name\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"name\",\n              placeholder: \"Enter your name\",\n              type: \"text\",\n              value: values.name,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.name && touched.name ? 'text-input error' : 'text-input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), errors.name && touched.name && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            required: true,\n            label: \"Last Name\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"lastName\",\n              placeholder: \"Enter your Last Name\",\n              type: \"text\",\n              value: values.lastName,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), errors.lastName && touched.lastName && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            required: true,\n            label: \"Email\",\n            hasFeedback: true,\n            validateStatus: errors.email && touched.email ? \"error\" : 'success',\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"email\",\n              placeholder: \"Enter your Email\",\n              type: \"email\",\n              value: values.email,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.email && touched.email ? 'text-input error' : 'text-input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            required: true,\n            label: \"Password\",\n            hasFeedback: true,\n            validateStatus: errors.password && touched.password ? \"error\" : 'success',\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"password\",\n              placeholder: \"Enter your password\",\n              type: \"password\",\n              value: values.password,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.password && touched.password ? 'text-input error' : 'text-input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            required: true,\n            label: \"Confirm\",\n            hasFeedback: true,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"confirmPassword\",\n              placeholder: \"Enter your confirmPassword\",\n              type: \"password\",\n              value: values.confirmPassword,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), errors.confirmPassword && touched.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.confirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSubmit,\n              type: \"primary\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterPage, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = RegisterPage;\n;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["C:/Users/User/Desktop/EOS Project/front-end/src/View/RegisterPage/RegisterPage.js"],"names":["React","moment","Formik","Yup","registerUser","useDispatch","Form","Input","Button","Typography","Title","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","props","dispatch","email","lastName","name","password","confirmPassword","object","shape","string","required","min","oneOf","ref","values","setSubmitting","setTimeout","dataToSubmit","lastname","image","unix","then","response","payload","success","history","push","alert","err","errmsg","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","background","height","display","alignItems","minWidth","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../_actions/user_actions.js\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n  Typography\n} from 'antd';\nconst { Title } = Typography;\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\" style={{background:\"white\", height:\"700px\",display:\"flex\",alignItems:\"center\"}}>\n            <Form style={{ minWidth: '375px',marginLeft:\"500px\" }}{...formItemLayout} onSubmit={handleSubmit} >\n              <Title style={{marginLeft:\"150px\"}}>Sign Up</Title>\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage"]},"metadata":{},"sourceType":"module"}